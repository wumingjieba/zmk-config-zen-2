/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            label = "HM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };

        as: autoshift {
            compatible = "zmk,behavior-hold-tap";
            label = "autoshift";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
        };

        shiftwin: shiftwin {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFTWIN";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp LEFT_GUI>;
        };
    };

    combos {
        compatible = "zmk,combos";

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <4 5>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <15 16>;
        };

        del-right {
            bindings = <&kp DEL>;
            key-positions = <19 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W       &kp E           &kp R      &kp T          &kp Y            &kp U        &kp I                &kp O            &kp P              &kp BSPC
&kp LCTRL  &kp A  &hm LALT S  &kp D           &kp F      &kp G          &kp H            &kp J        &kp K                &kp L            &as LS(SEMI) SEMI  &kp SQT
&td0       &kp Z  &kp X       &kp C           &kp V      &kp B          &kp N            &kp M        &as LS(COMMA) COMMA  &as LS(DOT) DOT  &as LS(FSLH) FSLH  &kp ESC
                              &mt LCTRL CAPS  &shiftwin  &lt 1 SPACE    &lt 2 BACKSPACE  &lt 3 ENTER  &kp RALT
            >;
        };

        lower_layer {
            display-name = "left/number";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans       &kp ESCAPE       &kp DOLLAR  &kp UP_ARROW  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp N7                     &kp N8         &kp N9               &kp MINUS     &kp EQUAL     &kp BSPC
&bootloader  &bt BT_CLR_ALL   &kp LEFT    &kp DOWN      &kp RIGHT_ARROW       &bt BT_SEL 3             &as LS(N4) N4              &kp N5         &kp NUMBER_6         &kp PLUS      &kp KP_ENTER  &kp PG_UP
&trans       &rgb_ug RGB_OFF  &bt BT_PRV  &bt BT_NXT    &trans                &rgb_ug RGB_EFF          &as LS(NUMBER_1) NUMBER_1  &as LS(N2) N2  &as LS(NUMBER_3) N3  &kp ASTERISK  &kp SLASH     &kp PG_DN
                                          &trans        &trans                &trans                   &trans                     &kp N0         &kp KP_DOT
            >;
        };

        raise_layer {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1         &kp N2             &kp N3        &kp N4                &kp N5               &kp CARET        &kp AMPS    &kp UP    &kp LPAR   &kp RPAR  &kp BSPC
&trans  &kp SEMICOLON  &kp DOUBLE_QUOTES  &kp QUESTION  &kp LEFT_BRACKET      &kp RIGHT_BRACKET    &kp LS(MINUS)    &kp LEFT    &kp DOWN  &kp RIGHT  &kp BSLH  &bootloader
&trans  &kp COLON      &kp SQT            &kp SLASH     &kp NON_US_BACKSLASH  &kp PIPE             &kp EXCLAMATION  &kp LS(N6)  &kp LBRC  &kp RBRC   &kp PIPE  &kp TILDE
                                          &trans        &trans                &trans               &trans           &trans      &trans
            >;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans         &trans       &kp F7  &kp F8  &kp F9  &kp F10          &kp F11
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &bootloader    &bootloader  &trans  &trans  &trans  &kp PRINTSCREEN  &kp F12
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans         &trans       &trans  &trans  &trans  &kp SCROLLLOCK   &kp PAUSE_BREAK
                         &trans   &trans   &trans         &trans       &trans  &trans
            >;
        };
    };
};
